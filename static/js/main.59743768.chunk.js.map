{"version":3,"sources":["components/Headers/AlternativeHeader.jsx","views/pages/reusableComponents/home/Home.jsx","views/pages/reusableComponents/countryDetail/CountryDetail.jsx","index.js"],"names":["AlternativeHeader","className","Container","fluid","Row","Col","lg","xs","this","props","heading","Breadcrumb","listClassName","BreadcrumbItem","href","onClick","e","preventDefault","parentName","aria-current","name","React","Component","SearchBar","Search","countryColumns","dataField","text","sort","searchable","formatter","cellContent","alt","src","flag","to","options","hideSizePerPage","defaultSorted","order","Home","state","list","activeCases","recovered","deaths","totalCases","ipAddress","countryName","worldwideTotalCases","worldwideActionCases","worldwideRecovered","worldwideDeaths","worldwideActiveCases","worldWideDataUpdated","countryCode","countryList","coronaHistory","newCases","newDeaths","newRecovered","newActiveCases","countryListNew","todayCases","todayRecovered","todayDeaths","updated","axios","get","then","response","setState","data","userIpv4Detail","country_name","country_code","activeCase","Global","TotalConfirmed","TotalRecovered","TotalDeaths","lastUpdate","country","Countries","find","item","CountryCode","activeCaseInCountry","Date","NewConfirmed","NewDeaths","NewRecovered","mapData","key","push","columnsKey","moment","date","format","Confirmed","fromNow","colors","xtitle","ytitle","label","download","adapter","curve","thousands","decimal","round","messages","empty","historyData","chartType","width","height","countryCoronaCount","keyField","columns","search","searchProps","baseProps","loading","bootstrap4","hover","pagination","paginationFactory","getName","require","CountryDetail","provinceList","countryCoronaHistory","tests","critical","population","testsPerMillion","activePerMillion","casesPerMillion","uniqueId","match","params","countryProvinces","filter","countryInfo","active","testsPerOneMillion","activePerOneMillion","casesPerOneMillion","console","table","id","CardBody","uuidv4","ReactDOM","render","path","from","document","getElementById"],"mappings":"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","file":"static/js/main.59743768.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Breadcrumb, BreadcrumbItem, Col, Container, Row} from \"reactstrap\";\n\nclass AlternativeHeader extends React.Component {\n\n  render() {\n    return (\n      <>\n        <div className=\"header\">\n          <Container fluid>\n            <div className=\"header-body\">\n              <Row className=\"align-items-center py-4\">\n                <Col lg=\"6\" xs=\"7\">\n                  <h6 className=\"h2 d-inline-block mb-0\">{this.props.heading}</h6>{\" \"}\n                  <Breadcrumb\n                    className=\"d-none d-md-inline-block ml-md-4\"\n                    listClassName=\"breadcrumb-links\"\n                  >\n                    <BreadcrumbItem>\n                      <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                        <i className=\"fas fa-home\"/>\n                      </a>\n                    </BreadcrumbItem>\n                    <BreadcrumbItem>\n                      <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                        {this.props.parentName}\n                      </a>\n                    </BreadcrumbItem>\n                    <BreadcrumbItem aria-current=\"page\" className=\"active\">\n                      {this.props.name}\n                    </BreadcrumbItem>\n                  </Breadcrumb>\n                </Col>\n                <Col className=\"text-right\" lg=\"6\" xs=\"5\">\n                </Col>\n              </Row>\n            </div>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nAlternativeHeader.propTypes = {\n  name: PropTypes.string,\n  parentName: PropTypes.string,\n  heading: PropTypes.string\n};\n\nexport default AlternativeHeader;\n","import React from \"react\";\nimport {Col, Container, Row} from \"reactstrap\";\nimport axios from 'axios';\nimport AlternativeHeader from \"../../../../components/Headers/AlternativeHeader\";\nimport ToolkitProvider, {Search} from 'react-bootstrap-table2-toolkit';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ReactCountryFlag from \"react-country-flag\";\nimport {Chart} from \"react-google-charts\";\nimport {Link} from \"react-router-dom\";\nimport moment from \"moment\";\nimport {LineChart, PieChart} from \"react-chartkick\";\nimport 'chart.js'\n\nconst {SearchBar} = Search;\n\nconst countryColumns = [\n  {\n    dataField: 'country',\n    text: 'country',\n    sort: true,\n    searchable: true\n  },\n  {\n    dataField: 'cases',\n    text: 'cases',\n    searchable: true,\n    sort: true,\n  }, {\n    dataField: 'active',\n    text: 'active',\n    sort: true,\n    searchable: false,\n    formatter: (cellContent => {\n      return (\n        <>\n          <span className=\"name mb-0 text-sm\"> {cellContent}</span>\n        </>\n      )\n    })\n  },\n  {\n    dataField: 'recovered',\n    text: 'recovered',\n    sort: true,\n    searchable: false,\n    formatter: (cellContent => {\n      if (cellContent < 1) {\n        return (\n          <>\n            <span className=\"name mb-0 text-sm text-danger\"> Unavailable</span>\n          </>\n        )\n      } else {\n        return (\n          <>\n            <span className=\"name mb-0 text-sm text-success\"> {cellContent}</span>\n          </>\n        )\n      }\n\n    })\n  },\n  {\n    dataField: 'deaths',\n    text: 'deaths',\n    sort: true,\n    searchable: false,\n    formatter: (cellContent) => {\n      if (cellContent < 1) {\n        return (\n          <h5>\n            <span className=\"text-success\"> {cellContent}</span>\n          </h5>\n        );\n      }\n      return (\n        <h5>\n          <span className=\"text-warning\"> {cellContent}</span>\n        </h5>\n      );\n    }\n  },\n  {\n    dataField: 'continent',\n    text: 'continent',\n    searchable: false\n  },\n  {\n    dataField: \"countryInfo\",\n    text: 'Flag',\n    searchable: false,\n    formatter: (cellContent => {\n      return (\n        <div className=\"avatar-group\">\n          <img className=\"avatar center avatar-sm rounded-circle\" alt=\"flag\"\n               src={cellContent.flag}\n          />\n        </div>\n      )\n    })\n  },\n  {\n    dataField: 'countryInfo.iso2',\n    text: 'Action',\n    searchable: false,\n    formatter: (cellContent) => {\n      return (\n        <>\n          <Link\n            className=\"btn-icon-only text-dark\"\n            to={`/country/${cellContent}`}>View</Link>\n        </>\n      );\n    }\n  }];\n\nconst options = {\n  hideSizePerPage: true\n}\n\nconst defaultSorted = [{\n  dataField: 'cases',\n  order: 'desc'\n}];\n\n\nclass Home extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n      activeCases: \"\",\n      recovered: \"\",\n      deaths: \"\",\n      totalCases: \"\",\n      ipAddress: \"\",\n      countryName: \"\",\n      worldwideTotalCases: \"\",\n      worldwideActionCases: \"\",\n      worldwideRecovered: \"\",\n      worldwideDeaths: \"\",\n      worldwideActiveCases: \"\",\n      worldWideDataUpdated: \"\",\n      countryCode: \"\",\n      countryList: \"\",\n      coronaHistory: [],\n      newCases: \"\",\n      newDeaths: \"\",\n      newRecovered: \"\",\n      newActiveCases: \"\",\n      countryListNew: [],\n      todayCases: \"\",\n      todayRecovered: \"\",\n      todayDeaths: \"\",\n      updated: \"\",\n    }\n  }\n\n  async componentDidMount() {\n\n    await axios.get(`https://corona.lmao.ninja/v2/countries`).then(response => {\n      this.setState({countryListNew: response.data});\n    });\n\n    await axios.get(`https://freegeoip.app/json/${this.state.ipAddress}`).then(response => {\n      this.setState({userIpv4Detail: response.data});\n      this.setState({countryName: response.data.country_name});\n      this.setState({countryCode: response.data.country_code});\n    });\n\n    await axios.get(`https://api.covid19api.com/summary`).then(response => {\n      const activeCase = response.data.Global.TotalConfirmed - (response.data.Global.TotalRecovered + response.data.Global.TotalDeaths);\n      this.setState({worldwideTotalCases: response.data.Global.TotalConfirmed});\n      this.setState({worldwideRecovered: response.data.Global.TotalRecovered});\n      this.setState({worldwideDeaths: response.data.Global.TotalDeaths});\n      this.setState({worldWideDataUpdated: response.data.lastUpdate});\n      this.setState({worldwideActiveCases: activeCase});\n      const list = response.data.Countries;\n      const country = list.find((item) => {\n        return item.CountryCode === `${this.state.countryCode}`;\n      });\n      const activeCaseInCountry = country.TotalConfirmed - (country.TotalRecovered + country.TotalDeaths);\n      this.setState({recovered: country.TotalRecovered});\n      this.setState({deaths: country.TotalDeaths});\n      this.setState({updated: country.Date});\n      this.setState({todayCases: country.NewConfirmed});\n      this.setState({totalCases: country.TotalConfirmed});\n      this.setState({todayDeaths: country.NewDeaths});\n      this.setState({todayRecovered: country.NewRecovered});\n      this.setState({activeCases: activeCaseInCountry});\n      const newActiveCases = country.NewConfirmed - country.NewRecovered;\n      this.setState({newActiveCases: newActiveCases});\n    });\n\n    await axios.get('https://api.covid19api.com/summary').then(response => {\n      this.setState({countryList: response.data.Countries})\n    });\n    await axios.get(`https://api.covid19api.com/dayone/country/${this.state.countryCode}`).then(response => {\n      this.setState({coronaHistory: response.data});\n    });\n  }\n\n  countryCoronaCount() {\n    let mapData = [\n      [\"Country\", \"cases\"]\n    ];\n    for (let key in this.state.countryList) {\n      mapData.push([`${this.state.countryList[key].CountryCode}`, `${this.state.countryList[key].TotalConfirmed}`]);\n    }\n    return mapData;\n  }\n\n  historyData() {\n    const list = []\n    let mapData = this.state.coronaHistory;\n    for (let columnsKey in mapData) {\n      if (moment(mapData[columnsKey].Date).date() % 2 === 0) {\n        list.push([moment(mapData[columnsKey].Date).format(\"DD-MMMM\"), mapData[columnsKey].Confirmed])\n      }\n    }\n    return list\n  }\n\n  render() {\n    const obj = this;\n    return (\n      <>\n        <AlternativeHeader\n          name=\"Corona-Tracker\"\n        />\n        <Container className=\"mt--12\" fluid>\n          <div className=\"row\">\n            <div className=\"col-md-6 col-xl-3\">\n              <div className=\"card-stats card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col\"><h5 className=\"text-uppercase text-muted mb-0 card-title\">Total Case</h5>\n                      <span className=\"h2 font-weight-bold mb-0\">{this.state.totalCases}</span></div>\n                    <div className=\"col-auto col\">\n                      <div className=\"icon icon-shape bg-gradient-primary text-white rounded-circle shadow\"><i\n                        className=\"ni ni-chart-bar-32\"/></div>\n                    </div>\n                  </div>\n                  <p className=\"mt-3 mb-0 text-sm\"><span className=\"text-success mr-2\"><i\n                    className=\"fa fa-arrow-up\"/> {this.state.todayCases}</span> <span className=\"text-nowrap\">Since Last Day </span>\n                  </p></div>\n              </div>\n            </div>\n            <div className=\"col-md-6 col-xl-3\">\n              <div className=\"card-stats card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col\"><h5 className=\"text-uppercase text-muted mb-0 card-title\">Active Cases</h5>\n                      <span\n                        className=\"h2 font-weight-bold mb-0\">{this.state.activeCases}</span></div>\n                    <div className=\"col-auto col\">\n                      <div className=\"icon icon-shape bg-gradient-orange text-white rounded-circle shadow\"><i\n                        className=\"ni ni-ambulance\"/></div>\n                    </div>\n                  </div>\n                  <p className=\"mt-3 mb-0 text-sm\"><span className=\"text-success mr-2\"><i\n                    className=\"fa fa-arrow-up\"/> {this.state.newActiveCases}</span> <span className=\"text-nowrap\">Since Last Day </span>\n                  </p></div>\n              </div>\n            </div>\n            <div className=\"col-md-6 col-xl-3\">\n              <div className=\"card-stats card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col\"><h5 className=\"text-uppercase text-muted mb-0 card-title\">Recovered</h5><span\n                      className=\"h2 font-weight-bold mb-0\">{this.state.recovered}</span></div>\n                    <div className=\"col-auto col\">\n                      <div className=\"icon icon-shape bg-gradient-green text-white rounded-circle shadow\"><i\n                        className=\"ni ni-satisfied\"/></div>\n                    </div>\n                  </div>\n                  <p className=\"mt-3 mb-0 text-sm\"><span className=\"text-success mr-2\"><i\n                    className=\"fa fa-arrow-up\"/> {this.state.todayRecovered}</span> <span className=\"text-nowrap\">Since last Day</span>\n                  </p></div>\n              </div>\n            </div>\n            <div className=\"col-md-6 col-xl-3\">\n              <div className=\"card-stats card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col\"><h5 className=\"text-uppercase text-muted mb-0 card-title\">Deaths</h5><span\n                      className=\"h2 font-weight-bold mb-0\">{this.state.deaths}</span></div>\n                    <div className=\"col-auto col\">\n                      <div className=\"icon icon-shape bg-gradient-red text-white rounded-circle shadow\"><i\n                        className=\"ni ni-circle-08\"/></div>\n                    </div>\n                  </div>\n                  <p className=\"mt-3 mb-0 text-sm\"><span className=\"text-success mr-2\"><i\n                    className=\"fa fa-arrow-up\"/>{this.state.todayDeaths}</span> <span className=\"text-nowrap\">Since last Day</span>\n                  </p></div>\n              </div>\n            </div>\n          </div>\n          <Row>\n            <Col>\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"my-4\">\n                    <PieChart\n                      data={[[\"Total Case\", `${this.state.totalCases}`], [\"Deaths\", `${this.state.deaths}`], [\"Active Case\", `${this.state.activeCases}`], [\"Recovered\", `${this.state.recovered}`]]}/>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <span\n                        className=\"h6 surtitle float-xl-right text-muted\">{moment(this.state.updated).fromNow()}</span>\n                      <span className=\"d-block h3\">{this.state.countryName} <ReactCountryFlag\n                        countryCode={this.state.countryCode}/></span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Col>\n            <Col>\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"my-4\">\n                    <PieChart\n                      data={[[\"Total Case\", `${this.state.worldwideTotalCases}`], [\"Deaths\", `${this.state.worldwideDeaths}`], [\"Active Case\", `${this.state.worldwideActiveCases}`], [\"Recovered\", `${this.state.worldwideRecovered}`]]}/>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <span\n                        className=\"h6 surtitle float-xl-right text-muted\">{moment(this.state.updated).fromNow()}</span>\n                      <span className=\"d-block h3\">Worldwide </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Row>\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"my-4\">\n                <LineChart colors={[\"#b00\", \"#666\"]} xtitle=\"Time\" ytitle=\"Cases\" label=\"Cases\" download={true}\n                           adapter=\"chartjs\" curve={true} thousands=\",\" decimal=\",\" round={2}\n                           messages={{empty: \"Loading...\"}} data={obj.historyData()}/>\n              </div>\n            </div>\n          </div>\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"my-4\">\n                <Chart chartType=\"GeoChart\" width=\"100%\" height=\"300px\" data={obj.countryCoronaCount()}/>\n              </div>\n            </div>\n          </div>\n          <div className=\"card \">\n            <div className=\"card-body  \">\n              <div className=\"my-4 table-responsive overflow-hidden\">\n                <ToolkitProvider\n                  keyField=\"id\"\n                  data={this.state.countryListNew}\n                  columns={countryColumns}\n                  search\n                >\n                  {\n                    props => (\n                      <div>\n                        <h3>Search</h3>\n                        <SearchBar {...props.searchProps} />\n                        <hr/>\n                        <BootstrapTable\n                          {...props.baseProps}\n                          loading={true}\n                          bootstrap4={true}\n                          hover={true}\n                          keyField='country'\n                          defaultSorted={defaultSorted}\n                          pagination={paginationFactory(options)}\n                        />\n                      </div>\n                    )\n                  }\n                </ToolkitProvider>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport axios from \"axios\";\nimport AlternativeHeader from \"../../../../components/Headers/AlternativeHeader\";\nimport {CardBody, Container} from \"reactstrap\";\nimport ToolkitProvider, {Search} from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport moment from \"moment\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {LineChart} from \"react-chartkick\";\nimport 'chart.js'\n\nconst {getName} = require('country-list');\nconst {SearchBar} = Search;\nconst columns = [\n  {\n    dataField: 'province',\n    text: 'province',\n    sort: true,\n    searchable: true\n  },\n  {\n    dataField: 'stats.confirmed',\n    text: 'confirmed',\n    sort: true,\n    searchable: false,\n    formatter: (cellContent) => {\n      if (cellContent < 1) {\n        return (\n          <h5>\n            <span className=\"text-warning\"> No Data</span>\n          </h5>\n        );\n      }\n      return (\n        <h5>\n          <span className=\"text-success\"> {cellContent}</span>\n        </h5>\n      );\n    }\n  },\n  {\n    dataField: 'stats.recovered',\n    text: 'Recovered',\n    sort: true,\n    searchable: false,\n    formatter: (cellContent => {\n      if (cellContent < 1) {\n        return (\n          <>\n            <span className=\"name mb-0 text-sm text-danger\"> Unavailable</span>\n          </>\n        )\n      } else {\n        return (\n          <>\n            <span className=\"name mb-0 text-sm text-success\"> {cellContent}</span>\n          </>\n        )\n      }\n    })\n  },\n  {\n    dataField: 'stats',\n    text: 'Deaths',\n    sort: true,\n    searchable: false,\n    formatter: (cellContent => {\n      return (\n        <>\n          <span className=\"name mb-0 text-s align-items-center text-warning\">{cellContent.deaths}</span>\n        </>\n      )\n    })\n  }\n];\nconst options = {\n  hideSizePerPage: true\n}\n\nconst defaultSorted = [{\n  dataField: 'stats.confirmed',\n  order: 'desc'\n}];\n\nclass CountryDetail extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      recovered: \"\",\n      activeCases: \"\",\n      deaths: \"\",\n      totalCases: \"\",\n      provinceList: [],\n      countryCoronaHistory: [],\n      flag: \"\",\n      tests: \"\",\n      critical: \"\",\n      population: \"\",\n      testsPerMillion: \"\",\n      activePerMillion: \"\",\n      casesPerMillion: \"\",\n      todayCases: \"\",\n      todayRecovered: \"\",\n      todayDeaths: \"\",\n      newActiveCases: \"\",\n    }\n  }\n\n  async componentDidMount() {\n    const {uniqueId} = this.props.match.params;\n    await axios.get(`https://corona.lmao.ninja/v2/jhucsse`).then(response => {\n      let list = []\n      list = response.data;\n      const countryProvinces = list.filter((item) => {\n        return item.country === uniqueId || item.country === getName(uniqueId)\n      });\n      this.setState({provinceList: countryProvinces})\n    });\n\n    await axios.get(`https://corona.lmao.ninja/v2/countries/${uniqueId}`).then(response => {\n      this.setState({flag: response.data.countryInfo.flag});\n      this.setState({activeCases: response.data.active});\n      this.setState({tests: response.data.tests});\n      this.setState({critical: response.data.critical});\n      this.setState({population: response.data.population});\n      this.setState({testsPerMillion: response.data.testsPerOneMillion});\n      this.setState({activePerMillion: response.data.activePerOneMillion});\n      this.setState({casesPerMillion: response.data.casesPerOneMillion});\n    });\n\n    await axios.get(`https://api.covid19api.com/summary`).then(response => {\n      const list = response.data.Countries;\n      const country = list.find((item) => {\n        return item.CountryCode === uniqueId;\n      });\n      this.setState({totalCases: country.TotalConfirmed});\n      this.setState({todayCases: country.NewConfirmed});\n      this.setState({recovered: country.TotalRecovered});\n      this.setState({deaths: country.TotalDeaths});\n      this.setState({todayRecovered: country.NewRecovered});\n      this.setState({todayDeaths: country.NewDeaths});\n      const activeCaseInCountry = country.NewConfirmed - (country.NewRecovered + country.NewDeaths);\n      this.setState({newActiveCases: activeCaseInCountry});\n    });\n\n    await axios.get(`https://api.covid19api.com/dayone/country/${uniqueId}`).then(response => {\n      this.setState({countryCoronaHistory: response.data})\n      console.table(response.data)\n    });\n  }\n\n  historyData() {\n    const list = []\n    let mapData = this.state.countryCoronaHistory;\n    for (let columnsKey in mapData) {\n      if (moment(mapData[columnsKey].Date).date() % 2 === 0) {\n        list.push([moment(mapData[columnsKey].Date).format(\"DD-MMMM\"), mapData[columnsKey].Confirmed])\n      }\n    }\n    return list\n  }\n\n  render() {\n    const {uniqueId} = this.props.match.params;\n    const obj = this;\n    return (\n      <>\n        <AlternativeHeader\n          name={moment().format(`LLLL`)}\n          parentName=\"\"\n          heading={getName(uniqueId)}\n        />\n        <Container className=\"mt--12\" fluid>\n          {/*<Doughnut data={ddata}/>*/}\n          {/*<Pie data={ddata}/>*/}\n          {/*<Line data={obj.chartData()}/>*/}\n\n          <div className=\"row\">\n            <div className=\"col-md-6 col-xl-3\">\n              <div className=\"card-stats card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col\"><h5 className=\"text-uppercase text-muted mb-0 card-title\">Total Case</h5>\n                      <span className=\"h2 font-weight-bold mb-0\">{this.state.totalCases}</span></div>\n                    <div className=\"col-auto col\">\n                      <div className=\"icon icon-shape bg-gradient-red text-white rounded-circle shadow\"><i\n                        className=\"ni ni-active-40\"/></div>\n                    </div>\n                  </div>\n                  <p className=\"mt-3 mb-0 text-sm\"><span className=\"text-success mr-2\"><i\n                    className=\"fa fa-arrow-up\"/> {this.state.todayCases}</span> <span\n                    className=\"text-nowrap\">Today</span>\n                  </p></div>\n              </div>\n            </div>\n            <div className=\"col-md-6 col-xl-3\">\n              <div className=\"card-stats card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col\"><h5 className=\"text-uppercase text-muted mb-0 card-title\">Active Cases</h5>\n                      <span\n                        className=\"h2 font-weight-bold mb-0\">{this.state.activeCases}</span></div>\n                    <div className=\"col-auto col\">\n                      <div className=\"icon icon-shape bg-gradient-orange text-white rounded-circle shadow\"><i\n                        className=\"ni ni-chart-pie-35\"/></div>\n                    </div>\n                  </div>\n                  <p className=\"mt-3 mb-0 text-sm\"><span className=\"text-success mr-2\"><i\n                    className=\"fa fa-arrow-up\"/>{this.state.newActiveCases}</span> <span\n                    className=\"text-nowrap\">Today</span>\n                  </p></div>\n              </div>\n            </div>\n            <div className=\"col-md-6 col-xl-3\">\n              <div className=\"card-stats card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col\"><h5 className=\"text-uppercase text-muted mb-0 card-title\">Recovered</h5><span\n                      className=\"h2 font-weight-bold mb-0\">{this.state.recovered}</span></div>\n                    <div className=\"col-auto col\">\n                      <div className=\"icon icon-shape bg-gradient-green text-white rounded-circle shadow\"><i\n                        className=\"ni ni-money-coins\"/></div>\n                    </div>\n                  </div>\n                  <p className=\"mt-3 mb-0 text-sm\"><span className=\"text-success mr-2\"><i\n                    className=\"fa fa-arrow-up\"/> {this.state.todayRecovered}</span> <span\n                    className=\"text-nowrap\">Today</span>\n                  </p></div>\n              </div>\n            </div>\n            <div className=\"col-md-6 col-xl-3\">\n              <div className=\"card-stats card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col\"><h5 className=\"text-uppercase text-muted mb-0 card-title\">Deaths</h5><span\n                      className=\"h2 font-weight-bold mb-0\">{this.state.deaths}</span></div>\n                    <div className=\"col-auto col\">\n                      <div className=\"icon icon-shape bg-gradient-primary text-white rounded-circle shadow\"><i\n                        className=\"ni ni-chart-bar-32\"/></div>\n                    </div>\n                  </div>\n                  <p className=\"mt-3 mb-0 text-sm\"><span className=\"text-success mr-2\"><i\n                    className=\"fa fa-arrow-up\"/>{this.state.todayDeaths}</span> <span\n                    className=\"text-nowrap\">Today</span>\n                  </p></div>\n              </div>\n            </div>\n          </div>\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"my-4\">\n                <LineChart colors={[\"#b00\", \"#666\"]} xtitle=\"Time\" ytitle=\"Cases\" label=\"Cases\" download={true}\n                           adapter=\"chartjs\" curve={true} thousands=\",\" decimal=\",\" round={2}\n                           messages={{empty: \"Loading...\"}} data={obj.historyData()}/>\n              </div>\n            </div>\n          </div>\n          <div>\n            <div className=\"card-testimonial card \">\n              <div className=\"card-body pl-xl-9\">\n                <div id=\"info-areas\">\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <div className=\"info\">\n                        <div className=\"icon icon-primary\"><i className=\"fa fa-child\"/></div>\n                        <div className=\"description\"><h5 className=\"info-title\">Total Tests</h5>\n                          <p>{this.state.tests}</p></div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <div className=\"info\">\n                        <div className=\"icon icon-warning\"><i className=\"fa fa-bed\"/></div>\n                        <div className=\"description\"><h5 className=\"info-title\">Critical</h5>\n                          <p>{this.state.critical}</p></div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <div className=\"info\">\n                        <div className=\"icon icon-danger\"><i className=\"fa fa-users\"/></div>\n                        <div className=\"description\"><h5 className=\"info-title\">Population</h5>\n                          <p>{this.state.population}</p></div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <div className=\"info\">\n                        <div className=\"icon icon-primary\"><i className=\"fa fa-braille\"/></div>\n                        <div className=\"description\"><h5 className=\"info-title\">Tests Per Million</h5>\n                          <p>{this.state.testsPerMillion}</p>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <div className=\"info\">\n                        <div className=\"icon icon-warning\"><i className=\"fa fa-h-square\"/></div>\n                        <div className=\"description\"><h5 className=\"info-title\">Active Per Million</h5>\n                          <p>{this.state.activePerMillion}</p></div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <div className=\"info\">\n                        <div className=\"icon icon-danger\"><i className=\"fa fa-stethoscope\"/></div>\n                        <div className=\"description\"><h5 className=\"info-title\">Cases Per Million</h5>\n                          <p>{this.state.casesPerMillion}</p></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-testimonial card \">\n            <CardBody>\n              <ToolkitProvider\n                keyField=\"id\"\n                data={this.state.provinceList}\n                columns={columns}\n                search\n              >\n                {\n                  props => (\n                    <div>\n                      <h3>Search</h3>\n                      <SearchBar {...props.searchProps} />\n                      <hr/>\n                      <BootstrapTable\n                        {...props.baseProps}\n                        loading={true}\n                        bootstrap4={true}\n                        hover={true}\n                        id={uuidv4()}\n                        keyField='province'\n                        defaultSorted={defaultSorted}\n                        pagination={paginationFactory(options)}\n                      />\n                    </div>\n                  )\n                }\n              </ToolkitProvider>\n            </CardBody>\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default CountryDetail;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport \"react-notification-alert/dist/animate.css\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport \"assets/vendor/fullcalendar/dist/fullcalendar.min.css\";\nimport \"assets/vendor/sweetalert2/dist/sweetalert2.min.css\";\nimport \"assets/vendor/select2/dist/css/select2.min.css\";\nimport \"assets/vendor/quill/dist/quill.core.css\";\nimport \"assets/vendor/nucleo/css/nucleo.css\";\nimport \"assets/vendor/@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-pro-react.scss?v1.0.0\";\nimport \"assets/css/util.css\";\nimport Home from \"./views/pages/reusableComponents/home/Home\";\nimport CountryDetail from \"./views/pages/reusableComponents/countryDetail/CountryDetail\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n\n      <Route path=\"/country/:uniqueId\"\n             render={props => <CountryDetail {...props} />}/>\n\n      <Route path=\"/\"\n             render={props => <Home {...props} />}/>\n      <Redirect from=\"*\" to=\"/\"/>\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}